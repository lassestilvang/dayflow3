name: Performance Testing

on:
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Start application
        run: pnpm start &
        env:
          PORT: 3000

      - name: Wait for application to start
        run: sleep 10

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: '.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  bundle-size:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Analyze bundle size
        run: |
          pnpm build
          npx bundlesize

      - name: Comment PR with bundle size changes
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = '.next/static/chunks/';
            
            // Calculate total bundle size
            let totalSize = 0;
            if (fs.existsSync(path)) {
              const files = fs.readdirSync(path);
              files.forEach(file => {
                if (file.endsWith('.js')) {
                  const stats = fs.statSync(path + file);
                  totalSize += stats.size;
                }
              });
            }

            const sizeInKB = (totalSize / 1024).toFixed(2);
            const sizeInMB = (totalSize / 1024 / 1024).toFixed(2);

            const comment = `
            ## ðŸ“¦ Bundle Size Analysis
            
            **Total bundle size**: ${sizeInKB} KB (${sizeInMB} MB)
            
            This analysis helps us keep the application performant by monitoring bundle size changes.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });