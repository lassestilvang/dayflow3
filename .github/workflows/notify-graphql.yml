name: GraphQL Integration

on:
  pull_request:
    types: [opened, closed, ready_for_review, merged]
  issues:
    types: [opened, closed, labeled]
  release:
    types: [published"]
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  graphql-notify:
    runs-on: ubuntu-latest
    if: ${{ secrets.GRAPHQL_ENDPOINT != '' }}
    steps:
      - name: Send GraphQL mutation
        run: |
          mutation=$(cat <<EOF
          mutation SendGitHubEvent(\$input: GitHubEventInput!) {
            sendGitHubEvent(input: \$input) {
              id
              success
              message
            }
          }
          EOF
          )
          
          variables=$(cat <<EOF
          {
            "input": {
              "event": "${{ github.event_name }}",
              "action": "${{ github.event.action }}",
              "repository": "${{ github.repository }}",
              "sender": "${{ github.actor }}",
              "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
              "data": ${{ toJSON(github.event) }}
            }
          }
          EOF
          )
          
          curl -X POST \
            "${{ secrets.GRAPHQL_ENDPOINT }}" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.GRAPHQL_TOKEN }}" \
            -d "$(jq -n --arg query "$mutation" --arg variables "$variables" '{query: $query, variables: ($variables | fromjson)}')"