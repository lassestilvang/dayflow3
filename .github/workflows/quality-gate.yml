name: Quality Gate

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run all quality checks
        run: |
          echo "Running quality gate checks..."
          
          # Linting
          echo "🔍 Running ESLint..."
          pnpm lint
          echo "✅ ESLint passed"
          
          # Type checking
          echo "🔍 Running TypeScript type checking..."
          pnpm type-check
          echo "✅ Type checking passed"
          
          # Unit tests
          echo "🔍 Running unit tests..."
          pnpm test --coverage --watchAll=false
          echo "✅ Unit tests passed"
          
          # Build
          echo "🔍 Building application..."
          pnpm build
          echo "✅ Build successful"

      - name: Check test coverage
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Test coverage is below 80%: $COVERAGE%"
            exit 1
          fi
          echo "✅ Test coverage is acceptable: $COVERAGE%"

      - name: Check bundle size
        run: |
          pnpm build
          # Check if main bundle is under reasonable size limit
          BUNDLE_SIZE=$(find .next -name "main-*.js" -exec wc -c {} + | awk '{print $1}')
          MAX_SIZE=$((500 * 1024))  # 500KB
          if [ "$BUNDLE_SIZE" -gt "$MAX_SIZE" ]; then
            echo "❌ Bundle size is too large: $(($BUNDLE_SIZE / 1024))KB"
            exit 1
          fi
          echo "✅ Bundle size is acceptable: $(($BUNDLE_SIZE / 1024))KB"

      - name: Quality gate passed
        run: |
          echo "🎉 All quality checks passed!"
          echo "This PR is ready for merge."

      - name: Update PR status
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: 'Quality gate passed',
              context: 'quality-gate'
            });

      - name: Update PR status on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'failure',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: 'Quality gate failed',
              context: 'quality-gate'
            });