name: Raygun Integration

on:
  pull_request:
    types: [opened, closed, ready_for_review, merged]
  issues:
    types: [opened, closed, labeled]
  release:
    types: [published]
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  raygun-notify:
    runs-on: ubuntu-latest
    if: ${{ secrets.RAYGUN_API_KEY != '' }}
    steps:
      - name: Send Raygun error on CI failure
        if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure'
        run: |
          curl -X POST \
            "https://api.raygun.io/entries" \
            -H "X-ApiKey: ${{ secrets.RAYGUN_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "occurredOn": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'",
              "details": {
                "error": {
                  "className": "CIWorkflowFailure",
                  "message": "The CI workflow has failed and requires attention"
                },
                "userCustomData": {
                  "repository": "${{ github.repository }}",
                  "workflow": "${{ github.event.workflow_run.name }}",
                  "branch": "${{ github.event.workflow_run.head_branch }}",
                  "commit": "${{ github.event.workflow_run.head_commit.message }}",
                  "actor": "${{ github.event.workflow_run.head_commit.author.name }}",
                  "url": "${{ github.event.workflow_run.html_url }}"
                },
                "tags": ["ci", "github", "failure"],
                "version": "${{ github.sha }}",
                "machineName": "github-actions"
              }
            }'

      - name: Send Raygun error on critical issues
        if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'critical')
        run: |
          curl -X POST \
            "https://api.raygun.io/entries" \
            -H "X-ApiKey: ${{ secrets.RAYGUN_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "occurredOn": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'",
              "details": {
                "error": {
                  "className": "CriticalIssueOpened",
                  "message": "A critical issue has been opened and requires immediate attention"
                },
                "userCustomData": {
                  "repository": "${{ github.repository }}",
                  "issue": "${{ github.event.issue.title }}",
                  "author": "${{ github.event.issue.user.login }}",
                  "labels": "${{ join(github.event.issue.labels.*.name, ', ') }}",
                  "url": "${{ github.event.issue.html_url }}"
                },
                "tags": ["github", "issue", "critical"],
                "version": "${{ github.sha }}",
                "machineName": "github.com"
              }
            }'