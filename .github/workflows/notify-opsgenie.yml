name: Opsgenie Integration

on:
  pull_request:
    types: [opened, closed, ready_for_review, merged]
  issues:
    types: [opened, closed, labeled]
  release:
    types: [published]
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  opsgenie-notify:
    runs-on: ubuntu-latest
    if: ${{ secrets.OPSGENIE_API_KEY != '' }}
    steps:
      - name: Send Opsgenie alert on CI failure
        if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure'
        run: |
          curl -X POST \
            "https://api.opsgenie.com/v2/alerts" \
            -H "Authorization: GenieKey ${{ secrets.OPSGENIE_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "message": "CI Workflow Failed: ${{ github.event.workflow_run.name }}",
              "description": "The CI workflow has failed and requires attention.",
              "priority": "P1",
              "tags": ["ci", "github", "failure"],
              "details": {
                "repository": "${{ github.repository }}",
                "workflow": "${{ github.event.workflow_run.name }}",
                "branch": "${{ github.event.workflow_run.head_branch }}",
                "commit": "${{ github.event.workflow_run.head_commit.message }}",
                "actor": "${{ github.event.workflow_run.head_commit.author.name }}",
                "url": "${{ github.event.workflow_run.html_url }}"
              }
            }'

      - name: Send Opsgenie alert on critical issues
        if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'critical')
        run: |
          curl -X POST \
            "https://api.opsgenie.com/v2/alerts" \
            -H "Authorization: GenieKey ${{ secrets.OPSGENIE_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "message": "Critical Issue Opened: ${{ github.event.issue.title }}",
              "description": "A critical issue has been opened and requires immediate attention.",
              "priority": "P1",
              "tags": ["issue", "github", "critical"],
              "details": {
                "repository": "${{ github.repository }}",
                "issue": "${{ github.event.issue.title }}",
                "author": "${{ github.event.issue.user.login }}",
                "labels": "${{ join(github.event.issue.labels.*.name, ', ') }}",
                "url": "${{ github.event.issue.html_url }}"
              }
            }'